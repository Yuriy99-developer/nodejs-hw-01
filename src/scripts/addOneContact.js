import { createFakeContact } from "../utils/createFakeContact.js";
import { readContacts } from "../utils/readContacts.js";
import { writeContacts } from "../utils/writeContacts.js";

export const addOneContact = async () => {
    try {
        // 1Ô∏è‚É£ –ó—á–∏—Ç—É—î–º–æ —ñ—Å–Ω—É—é—á—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏
        const contacts = await readContacts();

        // 2Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ –æ–¥–∏–Ω –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç
        const newContact = createFakeContact();

        // 3Ô∏è‚É£ –î–æ–¥–∞—î–º–æ –π–æ–≥–æ –¥–æ –º–∞—Å–∏–≤—É
        const updatedContacts = [...contacts, newContact];

        // 4Ô∏è‚É£ –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞–∑–∞–¥ —É —Ñ–∞–π–ª
        await writeContacts(updatedContacts);

        console.log("‚úÖ –û–¥–∏–Ω –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!");
        console.log("üÜï –ù–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç:", newContact);
        console.log(`üì¶ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤: ${updatedContacts.length}`);
    } catch (error) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—ñ –∫–æ–Ω—Ç–∞–∫—Ç—É:", error);
    }
};

// –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
addOneContact();
